/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VerifierZK, VerifierZKInterface } from "../VerifierZK";

const _abi = [
  {
    type: "function",
    name: "verifyProof",
    inputs: [
      {
        name: "_pA",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
      {
        name: "_pB",
        type: "uint256[2][2]",
        internalType: "uint256[2][2]",
      },
      {
        name: "_pC",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
      {
        name: "_pubSignals",
        type: "uint256[3]",
        internalType: "uint256[3]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b5061069d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806311479fea1461002d575b5f80fd5b610047600480360381019061004291906105ce565b61005d565b604051610054919061064e565b60405180910390f35b5f61051d565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110610092575f805260205ff35b50565b5f60405183815284602082015285604082015260408160608360076107d05a03fa9150816100c5575f805260205ff35b825160408201526020830151606082015260408360808360066107d05a03fa9150816100f3575f805260205ff35b505050505050565b5f608086015f87017f282ab6e0ab8b1ca17c509deb0824cf845e81933abe12118cdc152cd9f01d13b081527f2038c268cd16cddcb05326c2ce5e511182af3b95b2afbf9d118455c77b620330602082015261019b5f8801357f0c4aea156126621c7997f44ada3d3d4be63cac6fc3c6e2ced472770e93338e267f2f1084efc8a02dbe47256d174057b94899d79036c58a876060734b038137f2fb84610095565b6101eb60208801357f0dfa568aabd5024a416fee2afb7a25e77eb421ef62b3ea4f5d00bbf54b734f357f243e07db9725a4539e415e6d410c758ed2275c94a13cb4a6b047dcd936a2f79284610095565b61023b60408801357f15f5188e09ba1524d35765e1d84c986e7711e17566ce5f697a499150b9e411e17f19daf6e31249be79918174635b1d0bdbb62ba04f9855969e92753c0e1f97f93584610095565b833582527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020830152843560408301526020850135606083015260408501356080830152606085013560a08301527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08301527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08301527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008301527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208301527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408301527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec86101608301525f88015161018083015260205f018801516101a08301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08301527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008301527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220830152853561024083015260208601356102608301527f11b878f598610f04cef80b0658fb3bdbb659ab84a0f24d297e54cb35e38eb7ed6102808301527f29bf024fe980759ad6808202f0a354d15e1c5be37d39a9602c6a58177f47736c6102a08301527f08c7a2a2cd1ad4114b25a54d374bf4d2183a29e21efc75467972a327d67dddca6102c08301527f21355bbb3060a4d3c2f825df0eda4baf02514799abfdb7b4d65a651290a1e43c6102e08301526020826103008460086107d05a03fa82518116935050505095945050505050565b60405161038081016040526105345f840135610063565b6105416020840135610063565b61054e6040840135610063565b61055b818486888a6100fb565b805f5260205ff35b5f80fd5b5f80fd5b5f8190508260206002028201111561058657610585610567565b5b92915050565b5f819050826040600202820111156105a7576105a6610567565b5b92915050565b5f819050826020600302820111156105c8576105c7610567565b5b92915050565b5f805f8061016085870312156105e7576105e6610563565b5b5f6105f48782880161056b565b94505060406106058782880161058c565b93505060c06106168782880161056b565b925050610100610628878288016105ad565b91505092959194509250565b5f8115159050919050565b61064881610634565b82525050565b5f6020820190506106615f83018461063f565b9291505056fea2646970667358221220c3d472f8333ecf7c0b79d9377551af0b7914be9b72bc654b83ebaeb6d8c4326f64736f6c63430008190033";

type VerifierZKConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierZKConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifierZK__factory extends ContractFactory {
  constructor(...args: VerifierZKConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifierZK & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifierZK__factory {
    return super.connect(runner) as VerifierZK__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierZKInterface {
    return new Interface(_abi) as VerifierZKInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VerifierZK {
    return new Contract(address, _abi, runner) as unknown as VerifierZK;
  }
}
